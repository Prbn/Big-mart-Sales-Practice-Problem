{
    "collab_server" : "",
    "contents" : "\n### MISSING DATA ###\n#==================#\n\n\n# Exploring the missing data\nfull.d[!complete.cases(full.d),]\n# Number of incomplete Rows\nnrow(full.d[!complete.cases(full.d),])\n\n# Rows that are missing data of Item_weight #\n#-------------------------------------------#\nhead(full.d[is.na(full.d$Item_Weight),])\n# Number of rows, missing data of Item Weight\nnrow(full.d[is.na(full.d$Item_Weight),])\n\n# The data can be imputed from the mean of other same data of same item\n# Taking care of missing data\nif(FALSE){\n  # EXPLAINATION\n  is.na(full.d$Item_Weight)\n  full.d[is.na(full.d$Item_Weight)]\n  full.d[is.na(full.d$Item_Weight),'Item_Weight']\n  \n  full.d[is.na(full.d$Item_Weight),'Item_Identifier']\n  \n  mean(full.d$Item_Weight, na.rm = TRUE)\n  mean(full.d['Item_Weight'], na.rm = TRUE)\n  mean(full.d[full.d$Item_Identifier==x, 'Item_Weight'], na.rm = TRUE)\n  sapply(full.d[is.na(full.d$Item_Weight),'Item_Identifier'],function(x)mean(full.d[full.d$Item_Identifier==x, 'Item_Weight'], na.rm = TRUE))\n}\n# Replacing missing data with mean of same item identity\nfull.d[is.na(full.d$Item_Weight),'Item_Weight'] <- sapply(full.d[is.na(full.d$Item_Weight),'Item_Identifier'],function(x)mean(full.d[full.d$Item_Identifier==x, 'Item_Weight'], na.rm = TRUE))\n\n# Have all been replaced?\nnrow(full.d[is.na(full.d$Item_Weight),])==0\n\n\n\n# Rows that are missing data of Item_Fat_Content #\n#------------------------------------------------#\nhead(full.d[is.na(full.d$Item_Fat_Content),])\n# Number of rows, missing data of Item Fat Content\nnrow(full.d[is.na(full.d$Item_Fat_Content),])\n# No missing data\n\n# Exploring different types of Item_Fat_Content\nlevels(full.d$Item_Fat_Content)\n# There are actuall two types only\ntable(full.d$Item_Fat_Content)\n\n# Correcting\nfull.d[full.d$Item_Fat_Content =='LF'| full.d$Item_Fat_Content =='low fat', 'Item_Fat_Content'] <- 'Low Fat'\nfull.d[full.d$Item_Fat_Content =='reg', 'Item_Fat_Content'] <- 'Regular'\n\n# Checking\ntable(full.d$Item_Fat_Content)\nlevels(full.d$Item_Fat_Content)\n\n# Refactorizing\nfull.d$Item_Fat_Content <- as.factor(as.character(full.d$Item_Fat_Content))\n\n# Checking\ntable(full.d$Item_Fat_Content)\nlevels(full.d$Item_Fat_Content)\n\n# Rows that are missing data of Item_Visibility #\n#------------------------------------------------#\nhead(full.d[is.na(full.d$Item_Visibility),])\n# Number of rows, missing data of Item Visibility\nnrow(full.d[is.na(full.d$Item_Visibility),])\n# No missing data\n\n\n# Rows that are missing data of Item_Type #\n#------------------------------------------------#\nhead(full.d[is.na(full.d$Item_Type),])\n# Number of rows, missing data of Item Type\nnrow(full.d[is.na(full.d$Item_Type),])\n# No missing data\n\n# Exploring different types of Item_Type\nlevels(full.d$Item_Type)\ntable(full.d$Item_Type)\n\n# Rows that are missing data of Item_MRP #\n#------------------------------------------------#\nhead(full.d[is.na(full.d$Item_MRP),])\n# Number of rows, missing data of Item MRP\nnrow(full.d[is.na(full.d$Item_MRP),])\n# No missing data\n\n# Exploring different types of Item MRP\nlevels(full.d$Item_MRP)\ntable(full.d$Item_MRP)\n\n# Rows that are missing data of Outlet_Establishment_Year #\n#------------------------------------------------#\nhead(full.d[is.na(full.d$Outlet_Establishment_Year),])\n# Number of rows, missing data of Outlet Establishment Year\nnrow(full.d[is.na(full.d$Outlet_Establishment_Year),])\n# No missing data\n\n# Exploring different types of Outlet Establishment Year\nlevels(full.d$Outlet_Establishment_Year)\ntable(full.d$Outlet_Establishment_Year)\n\n# Rows that are missing data of Outlet_Identifier #\n#------------------------------------------------#\nhead(full.d[is.na(full.d$Outlet_Identifier),])\n# Number of rows, missing data of Outlet Size\nnrow(full.d[is.na(full.d$Outlet_Identifier),])\n# No missing data\n\n# Exploring different types of Outlet Size\nfactor(full.d$Item_Identifier)\nlevels(full.d$Item_Identifier)\nlevels(full.d$Outlet_Identifier)\ntable(full.d$Outlet_Identifier)\n\n# Rows that are missing data of Outlet_Size #\n#------------------------------------------------#\nhead(full.d[is.na(full.d$Outlet_Size),])\n# Number of rows, missing data of Outlet Size\nnrow(full.d[is.na(full.d$Outlet_Size),])\n# No missing data\n\n# Exploring different types of Outlet Size\nlevels(full.d$Outlet_Size)\ntable(full.d$Outlet_Size)\n\nif (FALSE){\n  # Explanation\n  head(full.d[is.na(full.d$Outlet_Size),'Outlet_Identifier'])\n  Aa <- 'OUT045'\n  full.d[full.d$Outlet_Identifier == Aa,]\n  full.d[full.d$Outlet_Identifier == Aa,'Outlet_Size']\n  length(full.d[full.d$Outlet_Identifier == Aa,'Outlet_Size'])\n  sum(!is.na(full.d[full.d$Outlet_Identifier == Aa,'Outlet_Size']))\n}\nsapply(full.d[is.na(full.d$Outlet_Size),'Outlet_Identifier'],function(x)sum(!is.na(full.d[full.d$Outlet_Identifier == x,'Outlet_Size'])))\n# It seems the data of outlet of the store id not present.\n\n# are present store size are all correct\nAa <- table(full.d$Outlet_Identifier,full.d$Outlet_Size)\n\nstoresize.d <- data.frame(Outlet_Identifier=levels(full.d$Outlet_Identifier))\nstoresize.d$sumsales <- sapply(storesize.d$Outlet_Identifier,function(x)sum(full.d[full.d$Outlet_Identifier==x,'Item_Outlet_Sales'],na.rm = TRUE))\nstoresize.d$Outlet_size <- sapply(storesize.d$Outlet_Identifier,function(x)unique(full.d[full.d$Outlet_Identifier==x,'Outlet_Size']))\nstoresize.d$Outlet_Location_Type <- sapply(storesize.d$Outlet_Identifier,function(x)unique(full.d[full.d$Outlet_Identifier==x,'Outlet_Location_Type']))\nstoresize.d$Outlet_Type <- sapply(storesize.d$Outlet_Identifier,function(x)unique(full.d[full.d$Outlet_Identifier==x,'Outlet_Type']))\nstoresize.d$Number_of_Item <- sapply(storesize.d$Outlet_Identifier,function(x)length(unique(full.d[full.d$Outlet_Identifier==x,'Item_Identifier'])))\nstoresize.d$Outlet_Establishment_Year <- sapply(storesize.d$Outlet_Identifier,function(x)unique(full.d[full.d$Outlet_Identifier==x,'Outlet_Establishment_Year']))\nstoresize.d$Age <- 2017-storesize.d$Outlet_Establishment_Year\nstr(storesize.d)\n\n\n# Imputing missing Outlet Size values by predictive imputation\n# Predictive imputation\n# Create a predicting model based on other variables.\n\n# Creating a model predicting Outlet Size based on other variables.\n\n# Using 'mice' package. (Multivariate Imputation by Chained Equations)\n# 'rpart' (recursive partitioning for regression) can also be used.\n# Steps for mice imputation\n# 1. Factorize the factor variables.\n# 2. Perform mice imputation.\n\n# Setting a random Seed\nset.seed(123)\n\n# Performing mice imputation\n?mice()\n# Excluding certain less-than-useful variables:\nmice_mod <- mice(storesize.d[,!names(storesize.d) %in% 'Outlet_Identifier'], method='rf') \n# The methord here is Random Forest \n?names()\n# Saving the complete output\nmice_output <- complete(mice_mod)\n?complete()\n\n# Store Size\nstoresize.d$Outlet_size <- mice_output$Outlet_size\n\n# clearing mice variables\nrm(mice_mod,mice_output)\n\n# Backing up data\nBackup1 <- full.d\n#full.d <- Backup1\n\n# imputing missing values\nfull.d[is.na(full.d$Outlet_Size),'Outlet_Size'] <- sapply(as.character(full.d[is.na(full.d$Outlet_Size),'Outlet_Identifier']),function(x)storesize.d[storesize.d$Outlet_Identifier==x,'Outlet_size'])\n# as.character() is used as the factors actual value may be different\n\n\n\n\n# Rows that are missing data of Outlet_Location_Type #\n#------------------------------------------------#\nhead(full.d[is.na(full.d$Outlet_Location_Type),])\n# Number of rows, missing data of Outlet Location Type\nnrow(full.d[is.na(full.d$Outlet_Location_Type),])\n# No missing data\n\n# Exploring different types of Outlet Location Type\nlevels(full.d$Outlet_Location_Type)\ntable(full.d$Outlet_Location_Type)\n\n# Rows that are missing data of Outlet_Type #\n#------------------------------------------------#\nhead(full.d[is.na(full.d$Outlet_Type),])\n# Number of rows, missing data of Outlet Type\nnrow(full.d[is.na(full.d$Outlet_Type),])\n# No missing data\n\n# Exploring different types of Outlet Type\nlevels(full.d$Outlet_Type)\ntable(full.d$Outlet_Identifier,full.d$Outlet_Type)\n\n# Rows that are missing data of Item_Outlet_Sales #\n#------------------------------------------------#\nhead(full.d[is.na(full.d$Item_Outlet_Sales),])\n# Number of rows, missing data of Outlet Sales\nnrow(full.d[is.na(full.d$Item_Outlet_Sales),])\n# No missing data\n\n",
    "created" : 1514496403275.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "931189132",
    "id" : "5EF825E1",
    "lastKnownWriteTime" : 1514507862,
    "last_content_update" : 1514507862132,
    "path" : "D:/Work/R/R Projects/Big mart Sales Practice Problem/Big Mart/3 MISSING DATA.R",
    "project_path" : "3 MISSING DATA.R",
    "properties" : {
        "tempName" : "Untitled3"
    },
    "relative_order" : 5,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}